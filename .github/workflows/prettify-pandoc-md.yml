name: Prettify Markdown files and generate PDFs with pandoc

on:
  push:
    branches:
      - main
    paths:
      - "**/*.md"
      - "!README.md"

jobs:
  prettify:
    name: Prettify Markdown files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Prettify
        uses: creyD/prettier_action@v3.3
        with:
          prettier_options: --prose-wrap always --write
          only_changed: true
          commit_message: Prettified .md files via action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  generate_pdfs:
    name: Compile Markdown files to PDF
    needs: prettify
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 2
      - name: Create PDF folder and subfolders if needed
        run: |
          for dir in */; do
            mkdir -p pdfs/$dir
          done
      - name: Store modified non-README .md files to pass to pandoc
        run: |
          echo 'modified<<EOF' >> $GITHUB_ENV
          git diff ${{ github.sha }}~ ${{ github.sha }} --name-only \
          -- '*.md' ':(exclude)README.md' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Pandoc PDF compilation
        uses: docker://pandoc/latex:2.13
        with:
          entrypoint: /bin/sh
          modified: $modified
          args: >-
            -c "modified='${{ env.modified }}'; for file in $modified; do
            pandoc $file -o pdfs/${file%.md}.pdf;
            done"
      - name: Store non-PR short SHA for commit message
        run: >-
          echo "short_sha=`echo '${{ github.sha }}' |
          cut -c1-8`" >> $GITHUB_ENV
        if: ${{ github.event_name != 'pull_request' }}
      - name: Store PR latest short SHA for commit message
        run: >-
          echo "short_sha=`echo '${{ github.event.pull_request.head.sha }}' |
          cut -c1-8`" >> $GITHUB_ENV
        if: ${{ github.event_name == 'pull_request' }}
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4.10.0
        with:
          commit_message: "${{ env.short_sha }} PDFs"
          file_pattern: pdfs
